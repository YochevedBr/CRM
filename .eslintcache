[{"C:\\Users\\bracharot\\Desktop\\react\\CRM\\src\\index.js":"1","C:\\Users\\bracharot\\Desktop\\react\\CRM\\src\\App.js":"2","C:\\Users\\bracharot\\Desktop\\react\\CRM\\src\\components\\Customers.js":"3","C:\\Users\\bracharot\\Desktop\\react\\CRM\\src\\components\\CustomersTable.js":"4","C:\\Users\\bracharot\\Desktop\\react\\CRM\\src\\components\\Reports.js":"5","C:\\Users\\bracharot\\Desktop\\react\\CRM\\src\\components\\CustomersDetails.js":"6","C:\\Users\\bracharot\\Desktop\\react\\CRM\\src\\components\\Purchases.js":"7","C:\\Users\\bracharot\\Desktop\\react\\CRM\\src\\components\\CustomersReports.js":"8","C:\\Users\\bracharot\\Desktop\\react\\CRM\\src\\components\\HomePage.js":"9","C:\\Users\\bracharot\\Desktop\\react\\CRM\\src\\components\\Navbar.js":"10","C:\\Users\\bracharot\\Desktop\\react\\CRM\\src\\components\\AddCustomer.js":"11","C:\\Users\\bracharot\\Desktop\\react\\CRM\\src\\components\\CustomersTableReports.js":"12","C:\\Users\\bracharot\\Desktop\\react\\CRM\\src\\components\\UpdateCustomer.js":"13","C:\\Users\\bracharot\\Desktop\\react\\CRM\\src\\components\\AddCallRecord.js":"14"},{"size":503,"mtime":1612965473291,"results":"15","hashOfConfig":"16"},{"size":1964,"mtime":1612973177819,"results":"17","hashOfConfig":"16"},{"size":650,"mtime":1612972502121,"results":"18","hashOfConfig":"16"},{"size":5569,"mtime":1612972376073,"results":"19","hashOfConfig":"16"},{"size":629,"mtime":1612973087597,"results":"20","hashOfConfig":"16"},{"size":0,"mtime":1612698450515,"results":"21","hashOfConfig":"16"},{"size":267,"mtime":1612708171861,"results":"22","hashOfConfig":"16"},{"size":394,"mtime":1612889707080,"results":"23","hashOfConfig":"16"},{"size":514,"mtime":1612878797251,"results":"24","hashOfConfig":"16"},{"size":4841,"mtime":1612878797270,"results":"25","hashOfConfig":"16"},{"size":2454,"mtime":1612960477819,"results":"26","hashOfConfig":"16"},{"size":5184,"mtime":1612972962506,"results":"27","hashOfConfig":"16"},{"size":4300,"mtime":1612961053111,"results":"28","hashOfConfig":"16"},{"size":3665,"mtime":1612961036987,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"7ij95x",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"32"},"C:\\Users\\bracharot\\Desktop\\react\\CRM\\src\\index.js",[],["64","65"],"C:\\Users\\bracharot\\Desktop\\react\\CRM\\src\\App.js",[],"C:\\Users\\bracharot\\Desktop\\react\\CRM\\src\\components\\Customers.js",[],"C:\\Users\\bracharot\\Desktop\\react\\CRM\\src\\components\\CustomersTable.js",["66","67","68"],"import React from \"react\"\r\nimport { useTable, useFilters, useSortBy} from 'react-table';\r\nimport { useHistory } from \"react-router\";\r\nimport { Container,Row,Col, Table, InputGroup, FormControl } from 'react-bootstrap';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\n\r\nfunction CustomersTable(props) {\r\n    \r\n        const history = useHistory();\r\n\r\n        // build table\r\n        const data = React.useMemo(() =>\r\n        [{  \r\n            name: 'Ayaan',  \r\n            phone: 27,\r\n            email: 'd@gmail.com',\r\n            },{  \r\n            name: 'Yael',  \r\n            phone: 25,\r\n            email: 'b@gmail.com',\r\n            },{  \r\n            name: 'Yael',  \r\n            phone: 28,\r\n            email: 'c@gmail.com', \r\n            },{  \r\n            name: 'Bracha',  \r\n            phone: 26,\r\n            email: 'a@gmail.com',\r\n            },\r\n            ],\r\n            []\r\n        )    \r\n\r\n        const columns = React.useMemo(() =>\r\n        [\r\n        {  \r\n            Header: 'Name',  \r\n            accessor: 'name',\r\n            sortType: 'alphanumeric',\r\n        },{  \r\n            Header: 'Phone Number',  \r\n            accessor: 'phone', \r\n            sortType: 'basic',\r\n        },{  \r\n            Header: 'Email',  \r\n            accessor: 'email',\r\n            sortType: 'alphanumeric',\r\n        },\r\n        {\r\n            Header: 'Actions',\r\n            id: 'click-me-button',\r\n            Cell: ({row}) => (\r\n                <div>\r\n                    {/* <button onClick={() => handleEdit(row.original.email)}>üñäÔ∏è</button> */}\r\n                    <Button variant=\"outlined\" color=\"primary\" onClick={() => {history.push({pathname:  \"/update_customer\"})}}>Edit</Button>{' '}\r\n\r\n                    <Button variant=\"outlined\" color=\"primary\" onClick={() => handleDelete(row.original.email)}>Delete</Button>\r\n                </div>\r\n            )\r\n          }\r\n        ],\r\n        []\r\n        )  \r\n        \r\n        const defaultColumn = React.useMemo(() => ({\r\n              Filter: TextFilter,\r\n        }),\r\n        []\r\n        )\r\n        \r\n        \r\n        const {\r\n            getTableProps,\r\n            getTableBodyProps,\r\n            headerGroups,\r\n            rows,\r\n            getRowProps,\r\n            prepareRow,\r\n        } = useTable(\r\n            { columns, data, defaultColumn }, \r\n            useFilters,\r\n            useSortBy,\r\n            )\r\n\r\n        return(\r\n            <Container>\r\n                <Row>\r\n                    <Col>\r\n                    <Table  striped bordered hover responsive bsStyle=\"default\" style={{borderRadius: '5px', overflow: 'hidden'}} {...getTableProps()}>\r\n                        <thead>\r\n                            {headerGroups.map(headerGroup => (\r\n                                <tr {...headerGroup.getHeaderGroupProps()}>\r\n                                    {headerGroup.headers.map(column => (\r\n                                        <th {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n                                            {column.render('Header')}\r\n                                            <span>\r\n                                                {/* Render the columns sort UI */}\r\n                                                {column.isSorted ? (column.isSortedDesc ? ' üîΩ' : ' üîº') : '  '}\r\n                                            </span>\r\n                                            \r\n                                            {/* Render the columns filter UI */}\r\n                                            <div>{column.canFilter ? column.render('Filter') : null}\r\n                                            </div>\r\n                                        </th>\r\n                                    ))}\r\n                                </tr>\r\n                            ))}\r\n                        </thead>\r\n                        <tbody {...getTableBodyProps()}>\r\n                            {rows.map(row => {\r\n                                prepareRow(row)\r\n                                return (\r\n                                    <tr {...row.getRowProps()}>\r\n                                        {row.cells.map(cell => {\r\n                                        return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n\r\n                                        })}\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n                        </tbody>\r\n                    </Table>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n        \r\n        )\r\n}\r\n\r\nconst handleDelete = (data) => {\r\n    console.log('this is:', data);\r\n    // const r = this.state.rows.map((row) => data===row.original.email? {...row, show: !row.show}: row)\r\n    // this.setState({\r\n    //   rows: r\r\n    // })\r\n    \r\n  }\r\n\r\nconst handleEdit = (data) => {\r\n    // console.log('this is:', data);\r\n    // this.props.history.push('/customers_reports')\r\n  }\r\n\r\n\r\nfunction TextFilter({\r\n    column: { filterValue, preFilteredRows, setFilter },\r\n   }) {\r\n   \r\n    return (\r\n        <InputGroup className=\"mb-3\">\r\n            <FormControl\r\n                placeholder=\"Search...\"\r\n                value={filterValue || ''}\r\n                onChange={e => {\r\n                    setFilter(e.target.value || undefined) // Set undefined to remove the filter entirely\r\n                }}\r\n                // aria-label=\"Username\"\r\n                // aria-describedby=\"basic-addon1\"\r\n            />\r\n        </InputGroup>\r\n    )\r\n   }\r\n\r\nexport default CustomersTable","C:\\Users\\bracharot\\Desktop\\react\\CRM\\src\\components\\Reports.js",[],"C:\\Users\\bracharot\\Desktop\\react\\CRM\\src\\components\\CustomersDetails.js",[],"C:\\Users\\bracharot\\Desktop\\react\\CRM\\src\\components\\Purchases.js",[],"C:\\Users\\bracharot\\Desktop\\react\\CRM\\src\\components\\CustomersReports.js",[],"C:\\Users\\bracharot\\Desktop\\react\\CRM\\src\\components\\HomePage.js",["69"],"import React from \"react\"\r\nimport Navbar from \"./Navbar\"\r\n\r\nclass HomaPage extends React.Component{\r\n    componentDidMount(){\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                {/* <Navbar /> */}\r\n                <h1>HELLO</h1>\r\n                <br></br>\r\n                <div>\r\n                    <button id=\"btnAdd\">Add</button>\r\n                    <button id=\"btnDelete\">Delete</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n   \r\n\r\nexport default HomaPage","C:\\Users\\bracharot\\Desktop\\react\\CRM\\src\\components\\Navbar.js",["70","71","72","73","74"],"// import React from \"react\"\r\nimport NavBar, { ElementsWrapper } from 'react-scrolling-nav'\r\nimport { Link } from 'react-router-dom';\r\n// import Customers from './Customers'\r\n\r\n// class Navbar extends React.Component{\r\n\r\n//     render() {\r\n//         const navbarItems = [{\r\n//             label: \"Item 1\",\r\n//             target: <Redirect to=\"./Customers\" />\r\n//         }, {\r\n//             label: \"Item 2\",\r\n//             target: \"item-2\"\r\n//         }, {\r\n//             label: \"Item 3\",\r\n//             target: \"item-3\"\r\n//         }, {\r\n//             label: \"Item 4\",\r\n//             target: \"item-4\"\r\n//         }, ]\r\n//         return (\r\n//             <div>\r\n//                 <NavBar items={navbarItems} offset={-80} duration={500} delay={0}>\r\n//                 </NavBar>\r\n//                 <div className=\"container\">\r\n//                     <ElementsWrapper items={navbarItems}>\r\n//                         <div name=\"item-1\" className=\"item\">item 1</div>\r\n//                         <div name=\"item-2\" className=\"item\">item 2</div>\r\n//                         <div name=\"item-3\" className=\"item\">item 3</div>\r\n//                         <div name=\"item-4\" className=\"item\">item 4</div>\r\n                        \r\n//                     </ElementsWrapper>\r\n//                 </div>\r\n//             </div>\r\n//         );\r\n//     }\r\n    \r\n// }\r\n\r\n// export default Navbar\r\n\r\n// const Navbar = () => {\r\n//     return (\r\n//       <div>\r\n//         <h5>NAVBAR</h5>\r\n//         <ul>\r\n//           <li><Link to=\"/Customers\">costumers</Link></li>\r\n//           {/* <li><Link to=\"/About\">About</Link></li> */}\r\n//            </ul>\r\n//         <hr />\r\n//       </div>\r\n//     );\r\n//   };\r\n  \r\n//   export default Navbar;\r\n\r\nimport React from 'react'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    useParams,\r\n  } from \"react-router-dom\";\r\n  import { Navbar,Nav,NavDropdown,Form,FormControl,Button } from 'react-bootstrap'\r\n//   import Home from './Home';\r\n//   import AboutUs from './AboutUs';\r\n//   import ContactUs from './ContactUs';\r\nimport Customers from './Customers'\r\nimport HomePage from './HomePage'\r\n\r\nclass BootstrapNavbar extends React.Component{\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <Router>\r\n                            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" sticky=\"top\">\r\n                                {/* <Navbar.Brand href=\"#home\">React Bootstrap Navbar</Navbar.Brand> */}\r\n                                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                                    <Nav className=\"mr-auto\">\r\n                                    <Nav.Link href=\"/\">Home</Nav.Link>\r\n                                    <Nav.Link href=\"/Customers\">Contact Us</Nav.Link>\r\n                                    <Nav.Link href=\"/Customers\">About Us</Nav.Link>\r\n                                    {/* <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\r\n                                        <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n                                        <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\r\n                                        <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n                                        <NavDropdown.Divider />\r\n                                        <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\r\n                                    </NavDropdown> */}\r\n                                    </Nav>\r\n                                    <Form inline>\r\n                                    <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n                                    <Button variant=\"outline-success\">Search</Button>\r\n                                    </Form>\r\n                                </Navbar.Collapse>\r\n                            </Navbar>\r\n                            <br />\r\n                            <Switch>\r\n                                <Route exact path=\"/\">\r\n                                    <HomePage />\r\n                                </Route>\r\n                                <Route exact path=\"/Customers\">\r\n                                    <Customers />\r\n                                </Route>\r\n                                <Route exact path=\"/Customers\">\r\n                                    <Customers />\r\n                                </Route>\r\n                            </Switch>\r\n                        </Router>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )  \r\n    }\r\n}\r\n\r\nexport default BootstrapNavbar;","C:\\Users\\bracharot\\Desktop\\react\\CRM\\src\\components\\AddCustomer.js",[],"C:\\Users\\bracharot\\Desktop\\react\\CRM\\src\\components\\CustomersTableReports.js",["75","76"],"C:\\Users\\bracharot\\Desktop\\react\\CRM\\src\\components\\UpdateCustomer.js",["77"],"import React from 'react';\r\nimport { Container,Row,Col,Form} from 'react-bootstrap';\r\nimport Button from '@material-ui/core/Button';\r\nimport AddCallRecord from \"./AddCallRecord\"\r\n// import {connect} from 'react-redux';\r\n// import DefaultUserPic from \"../uploads/team-male.jpg\";\r\n// const axios = require('axios');\r\n\r\nclass Customer extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            username:this.props.username,\r\n            phonenumber:this.props.phonenumber,\r\n            email:this.props.email,\r\n            profileImage:this.props.profileImage,\r\n            msg:this.props.msg,\r\n            uploadedFile:null\r\n        }\r\n    }\r\n\r\n    // fetchUserDetails=(user_id)=>{\r\n    //     //console.log(user_id);\r\n    //     axios.get(\"http://localhost:5000/userapi/getUserDetails/\"+user_id,{\r\n    //         headers: {\r\n    //             \"content-type\": \"application/json\"\r\n    //           }\r\n    //     }).then(res=>{\r\n    //         console.log(res);\r\n    //         this.setState({email:res.data.results[0].email});\r\n    //         this.setState({profileImage:res.data.results[0].profileImage})\r\n    //     })\r\n    //     .catch(err=>console.log(err))\r\n    // }\r\n\r\n    // changeProfileImage=(event)=>{\r\n       \r\n    //     this.setState({uploadedFile:event.target.files[0]});\r\n    // }\r\n\r\n    // UpdateProfileHandler=(e)=>{\r\n    //     e.preventDefault();\r\n    //     //create object of form data\r\n    //     const formData=new FormData();\r\n    //     formData.append(\"profileImage\",this.state.uploadedFile);\r\n    //     formData.append(\"user_id\",this.state.user_id);\r\n\r\n    //     //update-profile\r\n    //     axios.post(\"http://localhost:5000/userapi/update-profile/\",formData,{\r\n    //         headers: {\r\n    //             \"content-type\": \"application/json\"\r\n    //           }\r\n    //     }).then(res=>{\r\n    //         console.log(res);\r\n    //        this.setState({msg:res.data.message});\r\n    //        this.setState({profileImage:res.data.results.profileImage});\r\n    //     })\r\n    //     .catch(err=>console.log(err))\r\n    // }\r\n\r\n\r\n    // componentDidMount(){\r\n    //  this.fetchUserDetails(this.state.user_id);\r\n    // }\r\n\r\n    render(){\r\n\r\n    // if(this.state.profileImage){\r\n    //     var imagestr=this.state.profileImage;\r\n    //     imagestr = imagestr.replace(\"public/\", \"\");\r\n    //     var profilePic=\"http://localhost:5000/\"+imagestr;\r\n    // }else{\r\n    //      profilePic=DefaultUserPic;\r\n    // }\r\n\r\n    return (\r\n    <Container>\r\n        <Row>\r\n            <Col>\r\n                <h1>Update Customer</h1>\r\n                <Form className=\"form\">     \r\n                    <p>{this.state.msg}</p>\r\n                    <Form.Group controlId=\"formCategory1\">\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control type=\"text\" defaultValue={this.state.username}/> \r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formCategory1\">\r\n                        <Form.Label>Phone Number</Form.Label>\r\n                        <Form.Control type=\"text\" defaultValue={this.state.phonenumber}/> \r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formCategory2\">\r\n                        <Form.Label>Email</Form.Label>\r\n                        <Form.Control type=\"email\" defaultValue={this.state.email} />          \r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formCategory4\">\r\n                        <Form.Label>Profile Image</Form.Label>\r\n                        <Form.Control type=\"file\" name=\"profileImage\" onChange={this.changeProfileImage}/>\r\n                    </Form.Group>\r\n                    <Button variant=\"outlined\" color=\"primary\" onClick={this.UpdateProfileHandler}>Update</Button>\r\n                    <AddCallRecord />\r\n                </Form>\r\n            </Col>\r\n        </Row>\r\n    </Container>\r\n    )\r\n}\r\n}\r\n\r\nconst mapStatetoProps=(state)=>{\r\n    return{\r\n        user_id:state.user.userDetails.userid,\r\n        username:state.user.userDetails.username,\r\n       email:state.user.email,\r\n       profileImage: state.user.profileImage,\r\n       msg:state.user.msg\r\n    }\r\n   }\r\n   \r\n   \r\n   export default Customer\r\n//    export default connect(mapStatetoProps)(UserProfile);","C:\\Users\\bracharot\\Desktop\\react\\CRM\\src\\components\\AddCallRecord.js",["78"],"import React, { useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize'\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\nexport default function FormDialog(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  // Keep the value of the TextField\r\n  const [interest, setInterest] = useState('');\r\n  const [purchased, setPurchased] = useState('');\r\n  const [support, setSupport] = useState('');\r\n\r\n  // Handle on click button\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  \r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    console.log(interest);\r\n    console.log(purchased);\r\n    console.log(support);\r\n    console.log(checked)\r\n    setChecked(false)\r\n  };\r\n\r\n  // For Switch\r\n  const [checked, setChecked] = React.useState(false);\r\n\r\n  const toggleChecked = () => {\r\n    setChecked(prev => !prev);\r\n  };\r\n  \r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>Add Call Record</Button>\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Call Record Details</DialogTitle>\r\n        <DialogContent>            \r\n            {/* <TextareaAutosize\r\n                autoFocus\r\n                rowsMax\t= \"2\"\r\n                rowsMin = \"2\"\r\n                margin=\"dense\"\r\n                id=\"name\"\r\n                label=\"Interested in ...\"\r\n                type=\"text\"\r\n                required\r\n                fullWidth>\r\n            </TextareaAutosize> */}\r\n            <TextField\r\n                autoFocus\r\n                margin=\"dense\"\r\n                id=\"name\"\r\n                label=\"Interested in ...\"\r\n                type=\"text\"\r\n                fullWidth\r\n                onChange={(event) => setInterest(event.target.value)}\r\n            />\r\n            <TextField\r\n                margin=\"dense\"\r\n                id=\"name\"\r\n                label=\"Products purchased\"\r\n                type=\"text\"\r\n                fullWidth\r\n                multiline\r\n                onChange={(event) => setPurchased(event.target.value)}\r\n            />\r\n            <TextField\r\n                margin=\"dense\"\r\n                id=\"name\"\r\n                onChange={event => setSupport(event.target.value)}\r\n                label=\"Support\"\r\n                type=\"phone\"\r\n                fullWidth\r\n            />\r\n            <br></br>\r\n            <br></br>\r\n            <DialogContentText>Do return to customer?</DialogContentText>\r\n            <FormGroup>\r\n                {/* <FormControlLabel control={<Switch size=\"small\" checked={checked} onChange={toggleChecked} />} label=\"Small\" /> */}\r\n                <FormControlLabel control={<Switch checked={checked} onChange={toggleChecked} />} label=\"YES\" />\r\n            </FormGroup>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Submit\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\n",{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":64,"column":9,"nodeType":"85","endLine":64,"endColumn":11,"suggestions":"86"},{"ruleId":"87","severity":1,"message":"88","line":79,"column":13,"nodeType":"89","messageId":"90","endLine":79,"endColumn":24},{"ruleId":"87","severity":1,"message":"91","line":141,"column":7,"nodeType":"89","messageId":"90","endLine":141,"endColumn":17},{"ruleId":"87","severity":1,"message":"92","line":2,"column":8,"nodeType":"89","messageId":"90","endLine":2,"endColumn":14},{"ruleId":"87","severity":1,"message":"93","line":2,"column":8,"nodeType":"89","messageId":"90","endLine":2,"endColumn":14},{"ruleId":"87","severity":1,"message":"94","line":2,"column":18,"nodeType":"89","messageId":"90","endLine":2,"endColumn":33},{"ruleId":"87","severity":1,"message":"95","line":3,"column":10,"nodeType":"89","messageId":"90","endLine":3,"endColumn":14},{"ruleId":"87","severity":1,"message":"96","line":63,"column":5,"nodeType":"89","messageId":"90","endLine":63,"endColumn":14},{"ruleId":"87","severity":1,"message":"97","line":65,"column":23,"nodeType":"89","messageId":"90","endLine":65,"endColumn":34},{"ruleId":"87","severity":1,"message":"98","line":11,"column":15,"nodeType":"89","messageId":"90","endLine":11,"endColumn":22},{"ruleId":"87","severity":1,"message":"88","line":76,"column":13,"nodeType":"89","messageId":"90","endLine":76,"endColumn":24},{"ruleId":"87","severity":1,"message":"99","line":109,"column":7,"nodeType":"89","messageId":"90","endLine":109,"endColumn":22},{"ruleId":"87","severity":1,"message":"100","line":9,"column":8,"nodeType":"89","messageId":"90","endLine":9,"endColumn":24},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"react-hooks/exhaustive-deps","React Hook React.useMemo has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["103"],"no-unused-vars","'getRowProps' is assigned a value but never used.","Identifier","unusedVar","'handleEdit' is assigned a value but never used.","'Navbar' is defined but never used.","'NavBar' is defined but never used.","'ElementsWrapper' is defined but never used.","'Link' is defined but never used.","'useParams' is defined but never used.","'NavDropdown' is defined but never used.","'history' is assigned a value but never used.","'mapStatetoProps' is assigned a value but never used.","'TextareaAutosize' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"104","fix":"105"},"Update the dependencies array to be: [history]",{"range":"106","text":"107"},[1913,1915],"[history]"]